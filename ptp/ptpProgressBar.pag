VERSION 5.00
Begin VB.PropertyPage ptpProgressBar 
   Caption         =   "General"
   ClientHeight    =   3816
   ClientLeft      =   0
   ClientTop       =   0
   ClientWidth     =   5928
   BeginProperty Font 
      Name            =   "Tahoma"
      Size            =   8
      Charset         =   0
      Weight          =   400
      Underline       =   0   'False
      Italic          =   0   'False
      Strikethrough   =   0   'False
   EndProperty
   LockControls    =   -1  'True
   PaletteMode     =   0  'Halftone
   ScaleHeight     =   3816
   ScaleWidth      =   5928
   Begin VB.TextBox TextMarqueeSpeed 
      Height          =   315
      Left            =   1800
      TabIndex        =   19
      Top             =   3360
      Width           =   2235
   End
   Begin VB.TextBox TextStep 
      Height          =   315
      Left            =   1800
      TabIndex        =   17
      Top             =   3000
      Width           =   2235
   End
   Begin VB.TextBox TextValue 
      Height          =   315
      Left            =   1800
      TabIndex        =   9
      Top             =   1560
      Width           =   2235
   End
   Begin VB.CheckBox CheckMarquee 
      Caption         =   "Marquee"
      Height          =   285
      Left            =   4200
      TabIndex        =   21
      Top             =   840
      Width           =   1620
   End
   Begin VB.CheckBox CheckSmoothReverse 
      Caption         =   "SmoothReverse"
      Height          =   285
      Left            =   4200
      TabIndex        =   23
      Top             =   1560
      Width           =   1620
   End
   Begin VB.ComboBox ComboMousePointer 
      Height          =   288
      Left            =   1800
      Style           =   2  'Dropdown List
      TabIndex        =   3
      Top             =   480
      Width           =   2235
   End
   Begin VB.ComboBox ComboScrolling 
      Height          =   288
      Left            =   1800
      Style           =   2  'Dropdown List
      TabIndex        =   13
      Top             =   2280
      Width           =   2235
   End
   Begin VB.ComboBox ComboState 
      Height          =   288
      Left            =   1800
      Style           =   2  'Dropdown List
      TabIndex        =   15
      Top             =   2640
      Width           =   2235
   End
   Begin VB.ComboBox ComboOrientation 
      Height          =   288
      Left            =   1800
      Style           =   2  'Dropdown List
      TabIndex        =   11
      Top             =   1920
      Width           =   2235
   End
   Begin VB.TextBox TextMax 
      Height          =   315
      Left            =   1800
      TabIndex        =   7
      Top             =   1200
      Width           =   2235
   End
   Begin VB.TextBox TextMin 
      Height          =   315
      Left            =   1800
      TabIndex        =   5
      Top             =   840
      Width           =   2235
   End
   Begin VB.CheckBox CheckMarqueeAnimation 
      Caption         =   "MarqueeAnimation"
      Height          =   285
      Left            =   4200
      TabIndex        =   22
      Top             =   1200
      Width           =   1620
   End
   Begin VB.CheckBox CheckStepAutoReset 
      Caption         =   "StepAutoReset"
      Height          =   285
      Left            =   4200
      TabIndex        =   20
      Top             =   480
      Width           =   1620
   End
   Begin VB.CheckBox CheckEnabled 
      Caption         =   "Enabled"
      Height          =   285
      Left            =   120
      TabIndex        =   0
      Top             =   120
      Width           =   1620
   End
   Begin VB.CheckBox CheckVisualStyles 
      Caption         =   "VisualStyles"
      Height          =   285
      Left            =   1800
      TabIndex        =   1
      Top             =   120
      Width           =   1620
   End
   Begin VB.Label LabelMarqueeSpeed 
      Caption         =   "MarqueeSpeed:"
      Height          =   240
      Left            =   120
      TabIndex        =   18
      Top             =   3360
      Width           =   1620
   End
   Begin VB.Label LabelStep 
      Caption         =   "Step:"
      Height          =   240
      Left            =   120
      TabIndex        =   16
      Top             =   3000
      Width           =   1620
   End
   Begin VB.Label LabelValue 
      Caption         =   "Value:"
      Height          =   240
      Left            =   120
      TabIndex        =   8
      Top             =   1560
      Width           =   1620
   End
   Begin VB.Label LabelMousePointer 
      Caption         =   "MousePointer:"
      Height          =   240
      Left            =   120
      TabIndex        =   2
      Top             =   480
      Width           =   1620
   End
   Begin VB.Label LabelState 
      Caption         =   "State:"
      Height          =   240
      Left            =   120
      TabIndex        =   14
      Top             =   2640
      Width           =   1620
   End
   Begin VB.Label LabelScrolling 
      Caption         =   "Scrolling:"
      Height          =   240
      Left            =   120
      TabIndex        =   12
      Top             =   2280
      Width           =   1620
   End
   Begin VB.Label LabeOrientation 
      Caption         =   "Orientation:"
      Height          =   240
      Left            =   120
      TabIndex        =   10
      Top             =   1920
      Width           =   1620
   End
   Begin VB.Label LabelMax 
      Caption         =   "Max:"
      Height          =   240
      Left            =   120
      TabIndex        =   6
      Top             =   1200
      Width           =   1620
   End
   Begin VB.Label LabelMin 
      Caption         =   "Min:"
      Height          =   240
      Left            =   120
      TabIndex        =   4
      Top             =   840
      Width           =   1620
   End
End
Attribute VB_Name = "ptpProgressBar"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Option Explicit

Private Declare Function SendMessage Lib "user32" Alias "SendMessageW" (ByVal hWnd As Long, ByVal wMsg As Long, ByVal wParam As Long, ByRef lParam As Any) As Long

Private FreezeChanged   As Boolean

Private Sub PropertyPage_Initialize()
    Call ComCtlsShowAllUIStates(PropertyPage.hWnd)
    Call ComCtlsPPInitComboMousePointer(ComboMousePointer)
    With ComboOrientation
        .AddItem PrbOrientationHorizontal & " - Horizontal"
        .ItemData(.NewIndex) = PrbOrientationHorizontal
        .AddItem PrbOrientationVertical & " - Vertical"
        .ItemData(.NewIndex) = PrbOrientationVertical
    End With
    With ComboScrolling
        .AddItem PrbScrollingStandard & " - Standard"
        .ItemData(.NewIndex) = PrbScrollingStandard
        .AddItem PrbScrollingSmooth & " - Smooth"
        .ItemData(.NewIndex) = PrbScrollingSmooth
    End With
    With ComboState
        .AddItem PrbStateInProgress & " - InProgress"
        .ItemData(.NewIndex) = PrbStateInProgress
        .AddItem PrbStateError & " - Error"
        .ItemData(.NewIndex) = PrbStateError
        .AddItem PrbStatePaused & " - Paused"
        .ItemData(.NewIndex) = PrbStatePaused
    End With
End Sub

Private Sub PropertyPage_ApplyChanges()
    On Error Resume Next
    PropertyPage.ValidateControls
    If Err.Number = 380 Then Exit Sub
    On Error GoTo 0
    With PropertyPage.SelectedControls(0)
        .Enabled = CBool(CheckEnabled.Value = vbChecked)
        .VisualStyles = CBool(CheckVisualStyles.Value = vbChecked)
        .MousePointer = ComboMousePointer.ItemData(ComboMousePointer.ListIndex)
        .Min = CLng(TextMin.Text)
        .Max = CLng(TextMax.Text)
        .Value = CLng(TextValue.Text)
        .Orientation = ComboOrientation.ItemData(ComboOrientation.ListIndex)
        .Scrolling = ComboScrolling.ItemData(ComboScrolling.ListIndex)
        .State = ComboState.ItemData(ComboState.ListIndex)
        .Step = CLng(TextStep.Text)
        .MarqueeSpeed = CLng(TextMarqueeSpeed.Text)
        .StepAutoReset = CBool(CheckStepAutoReset.Value = vbChecked)
        .Marquee = CBool(CheckMarquee.Value = vbChecked)
        .MarqueeAnimation = CBool(CheckMarqueeAnimation.Value = vbChecked)
        .SmoothReverse = CBool(CheckSmoothReverse.Value = vbChecked)
    End With
    Call PropertyPage_SelectionChanged
End Sub

Private Sub PropertyPage_SelectionChanged()
    Dim i                As Long
    FreezeChanged = True
    With PropertyPage.SelectedControls(0)
        CheckEnabled.Value = IIf(.Enabled = True, vbChecked, vbUnchecked)
        CheckVisualStyles.Value = IIf(.VisualStyles = True, vbChecked, vbUnchecked)
        For i = 0 To ComboMousePointer.ListCount - 1
            If ComboMousePointer.ItemData(i) = .MousePointer Then
                ComboMousePointer.ListIndex = i
                Exit For
            End If
        Next i
        TextMin.Text = CStr(.Min)
        TextMax.Text = CStr(.Max)
        TextValue.Text = CStr(.Value)
        For i = 0 To ComboOrientation.ListCount - 1
            If ComboOrientation.ItemData(i) = .Orientation Then
                ComboOrientation.ListIndex = i
                Exit For
            End If
        Next i
        For i = 0 To ComboScrolling.ListCount - 1
            If ComboScrolling.ItemData(i) = .Scrolling Then
                ComboScrolling.ListIndex = i
                Exit For
            End If
        Next i
        For i = 0 To ComboState.ListCount - 1
            If ComboState.ItemData(i) = .State Then
                ComboState.ListIndex = i
                Exit For
            End If
        Next i
        TextStep.Text = CStr(.Step)
        TextMarqueeSpeed.Text = CStr(.MarqueeSpeed)
        CheckStepAutoReset.Value = IIf(.StepAutoReset = True, vbChecked, vbUnchecked)
        CheckMarquee.Value = IIf(.Marquee = True, vbChecked, vbUnchecked)
        CheckMarqueeAnimation.Value = IIf(.MarqueeAnimation = True, vbChecked, vbUnchecked)
        CheckSmoothReverse.Value = IIf(.SmoothReverse = True, vbChecked, vbUnchecked)
    End With
    FreezeChanged = False
End Sub

Private Sub CheckEnabled_Click()
    If FreezeChanged = True Then Exit Sub
    PropertyPage.Changed = True
End Sub

Private Sub CheckVisualStyles_Click()
    If FreezeChanged = True Then Exit Sub
    PropertyPage.Changed = True
End Sub

Private Sub ComboMousePointer_Click()
    If FreezeChanged = True Then Exit Sub
    PropertyPage.Changed = True
End Sub

Private Sub TextMin_GotFocus()
    If Not TextMin.SelStart = 0 Then Exit Sub
    TextMin.SelLength = Len(TextMin.Text)
End Sub

Private Sub TextMin_LostFocus()
    TextMin.SelStart = 0
End Sub

Private Sub TextMin_Change()
    If FreezeChanged = True Then Exit Sub
    If TextMin.Text = vbNullString Then
        TextMin.Text = PropertyPage.SelectedControls(0).Min
        TextMin.SelStart = 0
        TextMin.SelLength = Len(TextMin.Text)
    End If
    PropertyPage.Changed = True
End Sub

Private Sub TextMin_Validate(Cancel As Boolean)
    If Not IsNumeric(TextMin.Text) Then
        MsgBox "Invalid property value", vbCritical + vbOKOnly
        TextMin.Text = PropertyPage.SelectedControls(0).Min
        TextMin.SetFocus
        Cancel = True
    Else
        Dim LngValue         As Long
        On Error Resume Next
        LngValue = CLng(TextMin.Text)
        Cancel = CBool(Err.Number <> 0)
        On Error GoTo 0
        If Cancel = False Then
            TextMin.Text = LngValue
        Else
            MsgBox "Invalid property value", vbCritical + vbOKOnly
            TextMin.Text = PropertyPage.SelectedControls(0).Min
            TextMin.SetFocus
        End If
    End If
End Sub

Private Sub TextMax_GotFocus()
    If Not TextMax.SelStart = 0 Then Exit Sub
    TextMax.SelLength = Len(TextMax.Text)
End Sub

Private Sub TextMax_LostFocus()
    TextMax.SelStart = 0
End Sub

Private Sub TextMax_Change()
    If FreezeChanged = True Then Exit Sub
    If TextMax.Text = vbNullString Then
        TextMax.Text = PropertyPage.SelectedControls(0).Max
        TextMax.SelStart = 0
        TextMax.SelLength = Len(TextMax.Text)
    End If
    PropertyPage.Changed = True
End Sub

Private Sub TextMax_Validate(Cancel As Boolean)
    If Not IsNumeric(TextMax.Text) Then
        MsgBox "Invalid property value", vbCritical + vbOKOnly
        TextMax.Text = PropertyPage.SelectedControls(0).Max
        TextMax.SetFocus
        Cancel = True
    Else
        Dim LngValue         As Long
        On Error Resume Next
        LngValue = CLng(TextMax.Text)
        Cancel = CBool(Err.Number <> 0)
        On Error GoTo 0
        If Cancel = False Then
            TextMax.Text = LngValue
        Else
            MsgBox "Invalid property value", vbCritical + vbOKOnly
            TextMax.Text = PropertyPage.SelectedControls(0).Max
            TextMax.SetFocus
        End If
    End If
End Sub

Private Sub TextValue_GotFocus()
    If Not TextValue.SelStart = 0 Then Exit Sub
    TextValue.SelLength = Len(TextValue.Text)
End Sub

Private Sub TextValue_LostFocus()
    TextValue.SelStart = 0
End Sub

Private Sub TextValue_Change()
    If FreezeChanged = True Then Exit Sub
    If TextValue.Text = vbNullString Then
        TextValue.Text = PropertyPage.SelectedControls(0).Value
        TextValue.SelStart = 0
        TextValue.SelLength = Len(TextValue.Text)
    End If
    PropertyPage.Changed = True
End Sub

Private Sub TextValue_Validate(Cancel As Boolean)
    If Not IsNumeric(TextValue.Text) Then
        MsgBox "Invalid property value", vbCritical + vbOKOnly
        TextValue.Text = PropertyPage.SelectedControls(0).Value
        TextValue.SetFocus
        Cancel = True
    Else
        Dim LngValue         As Long
        On Error Resume Next
        LngValue = CLng(TextValue.Text)
        Cancel = CBool(Err.Number <> 0)
        On Error GoTo 0
        If Cancel = False Then
            TextValue.Text = LngValue
        Else
            MsgBox "Invalid property value", vbCritical + vbOKOnly
            TextValue.Text = PropertyPage.SelectedControls(0).Value
            TextValue.SetFocus
        End If
    End If
End Sub

Private Sub ComboOrientation_Click()
    If FreezeChanged = True Then Exit Sub
    PropertyPage.Changed = True
End Sub

Private Sub ComboScrolling_Click()
    If FreezeChanged = True Then Exit Sub
    PropertyPage.Changed = True
End Sub

Private Sub ComboState_Click()
    If FreezeChanged = True Then Exit Sub
    PropertyPage.Changed = True
End Sub

Private Sub TextStep_GotFocus()
    If Not TextStep.SelStart = 0 Then Exit Sub
    TextStep.SelLength = Len(TextStep.Text)
End Sub

Private Sub TextStep_LostFocus()
    TextStep.SelStart = 0
End Sub

Private Sub TextStep_Change()
    If FreezeChanged = True Then Exit Sub
    If TextStep.Text = vbNullString Then
        TextStep.Text = PropertyPage.SelectedControls(0).Step
        TextStep.SelStart = 0
        TextStep.SelLength = Len(TextStep.Text)
    End If
    PropertyPage.Changed = True
End Sub

Private Sub TextStep_Validate(Cancel As Boolean)
    If Not IsNumeric(TextStep.Text) Then
        MsgBox "Invalid property value", vbCritical + vbOKOnly
        TextStep.Text = PropertyPage.SelectedControls(0).Step
        TextStep.SetFocus
        Cancel = True
    Else
        Dim LngValue         As Long
        On Error Resume Next
        LngValue = CLng(TextStep.Text)
        Cancel = CBool(Err.Number <> 0)
        On Error GoTo 0
        If Cancel = False Then
            TextStep.Text = LngValue
        Else
            MsgBox "Invalid property value", vbCritical + vbOKOnly
            TextStep.Text = PropertyPage.SelectedControls(0).Step
            TextStep.SetFocus
        End If
    End If
End Sub

Private Sub TextMarqueeSpeed_GotFocus()
    If Not TextMarqueeSpeed.SelStart = 0 Then Exit Sub
    TextMarqueeSpeed.SelLength = Len(TextMarqueeSpeed.Text)
End Sub

Private Sub TextMarqueeSpeed_LostFocus()
    TextMarqueeSpeed.SelStart = 0
End Sub

Private Sub TextMarqueeSpeed_Change()
    If FreezeChanged = True Then Exit Sub
    If TextMarqueeSpeed.Text = vbNullString Then
        TextMarqueeSpeed.Text = PropertyPage.SelectedControls(0).MarqueeSpeed
        TextMarqueeSpeed.SelStart = 0
        TextMarqueeSpeed.SelLength = Len(TextMarqueeSpeed.Text)
    End If
    PropertyPage.Changed = True
End Sub

Private Sub TextMarqueeSpeed_KeyPress(KeyAscii As Integer)
    Call ComCtlsPPKeyPressOnlyNumeric(KeyAscii)
End Sub

Private Sub TextMarqueeSpeed_Validate(Cancel As Boolean)
    If Not IsNumeric(TextMarqueeSpeed.Text) Then
        MsgBox "Invalid property value", vbCritical + vbOKOnly
        TextMarqueeSpeed.Text = PropertyPage.SelectedControls(0).MarqueeSpeed
        TextMarqueeSpeed.SetFocus
        Cancel = True
    Else
        Dim LngValue         As Long
        On Error Resume Next
        LngValue = CLng(TextMarqueeSpeed.Text)
        Cancel = CBool(Err.Number <> 0)
        On Error GoTo 0
        If LngValue <= 0 Then Cancel = True
        If Cancel = False Then
            TextMarqueeSpeed.Text = LngValue
        Else
            MsgBox "Invalid property value", vbCritical + vbOKOnly
            TextMarqueeSpeed.Text = PropertyPage.SelectedControls(0).MarqueeSpeed
            TextMarqueeSpeed.SetFocus
        End If
    End If
End Sub

Private Sub CheckStepAutoReset_Click()
    If FreezeChanged = True Then Exit Sub
    PropertyPage.Changed = True
End Sub

Private Sub CheckMarquee_Click()
    If FreezeChanged = True Then Exit Sub
    PropertyPage.Changed = True
End Sub

Private Sub CheckMarqueeAnimation_Click()
    If FreezeChanged = True Then Exit Sub
    PropertyPage.Changed = True
End Sub

Private Sub CheckSmoothReverse_Click()
    If FreezeChanged = True Then Exit Sub
    PropertyPage.Changed = True
End Sub

Private Sub ComCtlsShowAllUIStates(ByVal hWnd As Long)
    Const WM_CHANGEUISTATE As Long = &H127
    Const UIS_CLEAR As Long = 2, UISF_HIDEFOCUS As Long = &H1, UISF_HIDEACCEL As Long = &H2
    SendMessage hWnd, WM_CHANGEUISTATE, MakeDWord(UIS_CLEAR, UISF_HIDEFOCUS Or UISF_HIDEACCEL), ByVal 0&
End Sub

Private Sub ComCtlsPPInitComboMousePointer(ByVal ComboBox As Object)
    With ComboBox
        .AddItem "0 - Default"
        .ItemData(.NewIndex) = 0
        .AddItem "1 - Arrow"
        .ItemData(.NewIndex) = 1
        .AddItem "2 - Cross"
        .ItemData(.NewIndex) = 2
        .AddItem "3 - I-Beam"
        .ItemData(.NewIndex) = 3
        .AddItem "4 - Hand"
        .ItemData(.NewIndex) = 4
        .AddItem "5 - Size"
        .ItemData(.NewIndex) = 5
        .AddItem "6 - Size NE SW"
        .ItemData(.NewIndex) = 6
        .AddItem "7 - Size N S"
        .ItemData(.NewIndex) = 7
        .AddItem "8 - Size NW SE"
        .ItemData(.NewIndex) = 8
        .AddItem "9 - Size W E"
        .ItemData(.NewIndex) = 9
        .AddItem "10 - Up Arrow"
        .ItemData(.NewIndex) = 10
        .AddItem "11 - Hourglass"
        .ItemData(.NewIndex) = 11
        .AddItem "12 - No Drop"
        .ItemData(.NewIndex) = 12
        .AddItem "13 - Arrow and Hourglass"
        .ItemData(.NewIndex) = 13
        .AddItem "14 - Arrow and Question"
        .ItemData(.NewIndex) = 14
        .AddItem "15 - Size All"
        .ItemData(.NewIndex) = 15
        .AddItem "16 - Arrow and CD"
        .ItemData(.NewIndex) = 16
        .AddItem "99 - Custom"
        .ItemData(.NewIndex) = 99
    End With
End Sub

Private Sub ComCtlsPPKeyPressOnlyNumeric(ByRef KeyAscii As Integer)
    If KeyAscii < 48 Or KeyAscii > 57 Then If KeyAscii <> 8 Then KeyAscii = 0
End Sub

Private Function MakeDWord(ByVal LoWord As Integer, ByVal HiWord As Integer) As Long
    MakeDWord = (CLng(HiWord) * &H10000) Or (LoWord And &HFFFF&)
End Function
